name: CI

on:
  push:
    branches: [ master ]
  pull_request:

# Note, Github Actions is dumb and only steps - not jobs - can access env.
# Therefore, if you update this, make sure to update the deploy job below.
env:
  IS_DEPLOY: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            gcc-version: 11
            deployable: true
          - os: ubuntu-22.04
            gcc-version: 12
            deployable: false
          - os: ubuntu-24.04
            gcc-version: 12
            deployable: false
          - os: ubuntu-24.04
            gcc-version: 13
            deployable: false
          - os: ubuntu-24.04
            gcc-version: 14
            deployable: false
          - os: macos-14
            gcc-version: 13
            deployable: false
          - os: macos-14
            gcc-version: 14
            deployable: false
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout
        uses: actions/checkout@main

      - name: Install deps (Linux)
        if: ${{ matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-24.04' }} 
        run: |
          sudo apt update
          sudo apt install gcc-arm-none-eabi binutils-arm-none-eabi

      - name: Install deps (Mac)
        if: ${{ matrix.os == 'macos-14' }}
        run: |
          brew install arm-none-eabi-binutils arm-none-eabi-gcc

      - name: Compile
        run: CC=gcc-${{matrix.gcc-version}} CXX=g++-${{matrix.gcc-version}} sh build.sh

      # No point in running the following steps if we are not deploying
      # See https://github.com/actions/runner/issues/1395 for why fromJSON() is needed
      - name: Install to temp dir
        if: ${{ fromJSON(env.IS_DEPLOY) && matrix.deployable }}
        shell: bash
        run: |
          mkdir TEMPDIR
          sh install.sh TEMPDIR

      - name: Create release archive
        if: ${{ fromJSON(env.IS_DEPLOY) && matrix.deployable }}
        shell: bash
        run: tar -C TEMPDIR/tools/agbcc -czf agbcc.tar.gz bin include lib

      - name: Upload archive
        uses: actions/upload-artifact@main
        if: ${{ fromJSON(env.IS_DEPLOY) && matrix.deployable }}
        with:
          name: agbcc.tar.gz
          path: agbcc.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    permissions:
      contents: write
    steps:

      - name: Download archive
        uses: actions/download-artifact@main
        with:
          name: agbcc.tar.gz

      - name: Update release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: agbcc.tar.gz
          commit: ${{ github.sha }}
          makeLatest: true
          tag: release
          token: ${{ secrets.GITHUB_TOKEN }} # Automatically created by the workflow with a lifetime of one hour
